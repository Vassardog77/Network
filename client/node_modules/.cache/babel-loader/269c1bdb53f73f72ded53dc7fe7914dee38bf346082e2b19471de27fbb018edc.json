{"ast":null,"code":"var _jsxFileName = \"/home/zack/Desktop/react-proj/Network/client/src/components/Feed/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { createPost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form(props) {\n  _s();\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(createPost(postData));\n  };\n  const clear = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        variant: \"h6\",\n        children: \"Creating a Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Creator\",\n        value: postData.creator,\n        onChange: e => setPostData({\n          ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Title\",\n        value: postData.title,\n        onChange: e => setPostData({\n          ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Message\",\n        value: postData.message,\n        onChange: e => setPostData({\n          ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Tags\",\n        value: postData.tags,\n        onChange: e => setPostData({\n          ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref => {\n            let {\n              base64\n            } = _ref;\n            return setPostData({\n              ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"81gog5tTU05NIqQGtQuaMayPaEM=\", false, function () {\n  return [useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","FileBase","useDispatch","createPost","Form","props","postData","setPostData","creator","title","message","tags","selectedFile","dispatch","handleSubmit","e","preventDefault","clear","target","value","base64"],"sources":["/home/zack/Desktop/react-proj/Network/client/src/components/Feed/Form.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport FileBase from 'react-file-base64'\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nimport { createPost } from '../../actions/posts'\r\nfunction Form(props) {\r\n\r\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(createPost(postData))\r\n    }\r\n\r\n    const clear = () => {\r\n\r\n    }\r\n    return (\r\n        <div>\r\n                <form autoComplete='off' onSubmit={handleSubmit}>\r\n                    <div variant='h6'>Creating a Memory</div>\r\n                    <textarea  placeholder='Creator' value={postData.creator}onChange={(e) => setPostData({ ...postData, creator: e.target.value })}></textarea>\r\n                    <textarea placeholder='Title' value={postData.title}onChange={(e) => setPostData({ ...postData, title: e.target.value })}></textarea>\r\n                    <textarea  placeholder='Message' value={postData.message}onChange={(e) => setPostData({ ...postData, message: e.target.value })}></textarea>\r\n                    <textarea  placeholder='Tags' value={postData.tags}onChange={(e) => setPostData({ ...postData, tags: e.target.value })}></textarea>\r\n                    <div>\r\n                        <FileBase type='file' multiple={false} onDone={({base64}) =>setPostData({ ...postData, selectedFile: base64})}></FileBase>\r\n                    </div>\r\n                    <button>Submit</button>\r\n                    <button onClick={clear}>Clear</button>\r\n                </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,WAAW,QAAQ,aAAa;AAGzC,SAASC,UAAU,QAAQ,qBAAqB;AAAA;AAChD,SAASC,IAAI,CAACC,KAAK,EAAE;EAAA;EAEjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,OAAO,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,YAAY,EAAE;EAAG,CAAC,CAAC;EAE7G,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAE9B,MAAMY,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;IAElBH,QAAQ,CAACV,UAAU,CAACG,QAAQ,CAAC,CAAC;EAClC,CAAC;EAED,MAAMW,KAAK,GAAG,MAAM,CAEpB,CAAC;EACD,oBACI;IAAA,uBACQ;MAAM,YAAY,EAAC,KAAK;MAAC,QAAQ,EAAEH,YAAa;MAAA,wBAC5C;QAAK,OAAO,EAAC,IAAI;QAAA,UAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAM,eACzC;QAAW,WAAW,EAAC,SAAS;QAAC,KAAK,EAAER,QAAQ,CAACE,OAAQ;QAAA,QAAQ,EAAGO,CAAC,IAAKR,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEE,OAAO,EAAEO,CAAC,CAACG,MAAM,CAACC;QAAM,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAY,eAC5I;QAAU,WAAW,EAAC,OAAO;QAAC,KAAK,EAAEb,QAAQ,CAACG,KAAM;QAAA,QAAQ,EAAGM,CAAC,IAAKR,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEG,KAAK,EAAEM,CAAC,CAACG,MAAM,CAACC;QAAM,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAY,eACrI;QAAW,WAAW,EAAC,SAAS;QAAC,KAAK,EAAEb,QAAQ,CAACI,OAAQ;QAAA,QAAQ,EAAGK,CAAC,IAAKR,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEI,OAAO,EAAEK,CAAC,CAACG,MAAM,CAACC;QAAM,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAY,eAC5I;QAAW,WAAW,EAAC,MAAM;QAAC,KAAK,EAAEb,QAAQ,CAACK,IAAK;QAAA,QAAQ,EAAGI,CAAC,IAAKR,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEK,IAAI,EAAEI,CAAC,CAACG,MAAM,CAACC;QAAM,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAY,eACnI;QAAA,uBACI,QAAC,QAAQ;UAAC,IAAI,EAAC,MAAM;UAAC,QAAQ,EAAE,KAAM;UAAC,MAAM,EAAE;YAAA,IAAC;cAACC;YAAM,CAAC;YAAA,OAAIb,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAEM,YAAY,EAAEQ;YAAM,CAAC,CAAC;UAAA;QAAC;UAAA;UAAA;UAAA;QAAA;MAAY;QAAA;QAAA;QAAA;MAAA,QACxH,eACN;QAAA,UAAQ;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS,eACvB;QAAQ,OAAO,EAAEH,KAAM;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACnC;IAAA;IAAA;IAAA;EAAA,QACT;AAEd;AAAC,GA/BQb,IAAI;EAAA,QAIQF,WAAW;AAAA;AAAA,KAJvBE,IAAI;AAiCb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}